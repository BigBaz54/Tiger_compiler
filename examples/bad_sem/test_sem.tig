let 
    var i:int = 1
    var s:string = "s"
    var unInit:int
    type arr = array of int
    var arr1:arr := arr[2] of 0
    type dict = {key:string, value:int}
    var dict1:dict := dict{key="foo", value=42}
    function foo(arg1:int, arg2:int):int = arg1
    var a:int := "je suis une string"               /* int expected, string provided */
    var a2:string := i                              /* string expected, int provided */
    var a3:string := foo(2, 3)                      /* string expected, int provided */
    var b := 1 + "1"                                /* operator + can't be used with int and string */
    var b2 := i * s                                 /* operator * can't be used with int and string */
    var c := 1/0                                    /* can't divide by 0 */
    var d := nonDec                                 /* var nonDec undefined */
    var e := s > i                                  /* can't compare string and int */
    var f := s & s                                  /* operator & can't be used with string and string */
    var g:int = unInit                              /* var unInit uninitialized */
    var h := arr1[12]                               /* index out of band */
    var i := dict1["kye"]                           /* type dict has no attribute "kye" */
    var s:string = "S"                              /* var s already declared */
    function foo(arg1:int, arg2:int):int = arg2     /* function foo already declared */
in
    print(foo(2))                                   /* function foo expected 2 args. but 1 was given */
    print(foo("", 2))                               /* function foo expected type int for arg1 but string was provided */

end